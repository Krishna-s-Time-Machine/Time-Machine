---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("blog");

// Get the blog post to embed (change "another-blog" to your actual slug)
const embeddedPost = posts.find(p => p.slug === "another-blog");

const sortedPosts = getSortedPosts(posts);
const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

{post ? (
  <>
    <PostDetails post={post} />
    
    {embeddedPost && (
      <section>
        <h2>Related Blog: {embeddedPost.data.title}</h2>
        <p>{embeddedPost.data.description}</p>
        <a href={`/blog/${embeddedPost.slug}/`}>Read more...</a>
      </section>
    )}
  </>
) : (
  <Posts {...pagination} />
)}